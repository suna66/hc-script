"use strict";var e=require("fs"),t=require("timers/promises");function r(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var s=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var s,i,n=r(require("readline/promises"));function a(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var o=a(function(){if(i)return s;function e(e){return"number"==typeof e||(!!/^0x[0-9a-f]+$/i.test(e)||/^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(e))}function t(e,t){return"constructor"===t&&"function"==typeof e[t]||"__proto__"===t}return i=1,s=function(r,s){s||(s={});var i={bools:{},strings:{},unknownFn:null};"function"==typeof s.unknown&&(i.unknownFn=s.unknown),"boolean"==typeof s.boolean&&s.boolean?i.allBools=!0:[].concat(s.boolean).filter(Boolean).forEach((function(e){i.bools[e]=!0}));var n={};function a(e){return n[e].some((function(e){return i.bools[e]}))}Object.keys(s.alias||{}).forEach((function(e){n[e]=[].concat(s.alias[e]),n[e].forEach((function(t){n[t]=[e].concat(n[e].filter((function(e){return t!==e})))}))})),[].concat(s.string).filter(Boolean).forEach((function(e){i.strings[e]=!0,n[e]&&[].concat(n[e]).forEach((function(e){i.strings[e]=!0}))}));var o=s.default||{},l={_:[]};function h(e,r,s){for(var n=e,a=0;a<r.length-1;a++){var o=r[a];if(t(n,o))return;void 0===n[o]&&(n[o]={}),n[o]!==Object.prototype&&n[o]!==Number.prototype&&n[o]!==String.prototype||(n[o]={}),n[o]===Array.prototype&&(n[o]=[]),n=n[o]}var l=r[r.length-1];t(n,l)||(n!==Object.prototype&&n!==Number.prototype&&n!==String.prototype||(n={}),n===Array.prototype&&(n=[]),void 0===n[l]||i.bools[l]||"boolean"==typeof n[l]?n[l]=s:Array.isArray(n[l])?n[l].push(s):n[l]=[n[l],s])}function c(t,r,s){if(!s||!i.unknownFn||function(e,t){return i.allBools&&/^--[^=]+$/.test(t)||i.strings[e]||i.bools[e]||n[e]}(t,s)||!1!==i.unknownFn(s)){var a=!i.strings[t]&&e(r)?Number(r):r;h(l,t.split("."),a),(n[t]||[]).forEach((function(e){h(l,e.split("."),a)}))}}Object.keys(i.bools).forEach((function(e){c(e,void 0!==o[e]&&o[e])}));var u=[];-1!==r.indexOf("--")&&(u=r.slice(r.indexOf("--")+1),r=r.slice(0,r.indexOf("--")));for(var v=0;v<r.length;v++){var p,f,x=r[v];if(/^--.+=/.test(x)){var b=x.match(/^--([^=]+)=([\s\S]*)$/);p=b[1];var d=b[2];i.bools[p]&&(d="false"!==d),c(p,d,x)}else if(/^--no-.+/.test(x))c(p=x.match(/^--no-(.+)/)[1],!1,x);else if(/^--.+/.test(x))p=x.match(/^--(.+)/)[1],void 0===(f=r[v+1])||/^(-|--)[^-]/.test(f)||i.bools[p]||i.allBools||n[p]&&a(p)?/^(true|false)$/.test(f)?(c(p,"true"===f,x),v+=1):c(p,!i.strings[p]||"",x):(c(p,f,x),v+=1);else if(/^-[^-]+/.test(x)){for(var m=x.slice(1,-1).split(""),y=!1,g=0;g<m.length;g++)if("-"!==(f=x.slice(g+2))){if(/[A-Za-z]/.test(m[g])&&"="===f[0]){c(m[g],f.slice(1),x),y=!0;break}if(/[A-Za-z]/.test(m[g])&&/-?\d+(\.\d*)?(e-?\d+)?$/.test(f)){c(m[g],f,x),y=!0;break}if(m[g+1]&&m[g+1].match(/\W/)){c(m[g],x.slice(g+2),x),y=!0;break}c(m[g],!i.strings[m[g]]||"",x)}else c(m[g],f,x);p=x.slice(-1)[0],y||"-"===p||(!r[v+1]||/^(-|--)[^-]/.test(r[v+1])||i.bools[p]||n[p]&&a(p)?r[v+1]&&/^(true|false)$/.test(r[v+1])?(c(p,"true"===r[v+1],x),v+=1):c(p,!i.strings[p]||"",x):(c(p,r[v+1],x),v+=1))}else if(i.unknownFn&&!1===i.unknownFn(x)||l._.push(i.strings._||!e(x)?x:Number(x)),s.stopEarly){l._.push.apply(l._,r.slice(v+1));break}}return Object.keys(o).forEach((function(e){var t,r,s;t=l,r=e.split("."),s=t,r.slice(0,-1).forEach((function(e){s=s[e]||{}})),r[r.length-1]in s||(h(l,e.split("."),o[e]),(n[e]||[]).forEach((function(t){h(l,t.split("."),o[e])})))})),s["--"]?l["--"]=u.slice():u.forEach((function(e){l._.push(e)})),l}}());class l{constructor(e){this.sentence=e,this.text=void 0,this.line=1,this.token=void 0}next(){for(;;){var e=this.sentence[0];if(null==e)return this.token=null,null;switch(this.sentence=this.sentence.slice(1),e){case" ":case"\r":case"\t":continue;case"\n":return this.line++,this.token=e,e;case"P":if(this.sentence.startsWith("OST"))return this.sentence=this.sentence.slice(3),this.token="POST",this.token;if(this.sentence.startsWith("UT"))return this.sentence=this.sentence.slice(2),this.token="PUT",this.token;if(this.sentence.startsWith("ATCH"))return this.sentence=this.sentence.slice(4),this.token="PATCH",this.token;break;case"G":if(this.sentence.startsWith("ET"))return this.sentence=this.sentence.slice(2),this.token="GET",this.token;break;case"D":if(this.sentence.startsWith("ELETE"))return this.sentence=this.sentence.slice(5),this.token="DELETE",this.token;break;case"i":if(this.sentence.startsWith("f"))return this.sentence=this.sentence.slice(1),this.token="IF",this.token;break;case"w":if(this.sentence.startsWith("hile"))return this.sentence=this.sentence.slice(4),this.token="WHILE",this.token;break;case"e":if(this.sentence.startsWith("nd"))return this.sentence=this.sentence.slice(2),this.token="END",this.token;break;case"s":if(this.sentence.startsWith("leep"))return this.sentence=this.sentence.slice(4),this.token="sleep",this.token;break;case"=":if("="==this.sentence[0])return this.sentence=this.sentence.slice(1),this.token="==",this.token;break;case">":if("="==this.sentence[0])return this.sentence=this.sentence.slice(1),this.token=">=",this.token;break;case"<":if("="==this.sentence[0])return this.sentence=this.sentence.slice(1),this.token="<=",this.token;break;case"!":if("="==this.sentence[0])return this.sentence=this.sentence.slice(1),this.token="!=",this.token;break;case"&":case"|":return this.sentence[0]==e&&(this.sentence=this.sentence.slice(1)),this.token=e,this.token;case'"':for(var t="",r=0;'"'!=(e=this.sentence[r++])&&null!=e&&null!=e;)"\n"==e&&this.line++,t+=e;return this.sentence=this.sentence.slice(r),this.text=t,this.token="string",this.token;case"{":t=e,r=0;for(var s=1;null!=(e=this.sentence[r++])&&null!=e;)if("{"==e&&s++,"}"==e&&s--,"\n"!=e){if("\r"!=e&&(t+=e,0==s))break}else this.line++;return this.sentence=this.sentence.slice(r),this.text=t,this.token="json",this.token;case"#":for(r=0;;)if("\n"==(e=this.sentence[r++])||null==e||null==e){this.line++;break}this.sentence=this.sentence.slice(r);continue}if(e>="0"&&e<="9"){t=e,r=0;for(var i="int";(e=this.sentence[r++])>="0"&&e<="9"||"."==e;){if("."==e){if("number"==i)return console.error("lex error(%d): %s",this.line,"invalid number"),null;i="number"}t+=e}return this.sentence=this.sentence.slice(r-1),this.text=t,this.token=i,this.token}if(e>="a"&&e<="z"||e>="A"&&e<="Z"||"_"==e){for(t=e,r=0;(e=this.sentence[r++])>="a"&&e<="z"||e>="A"&&e<="Z"||e>="0"&&e<="9"||"_"==e;)t+=e;return this.sentence=this.sentence.slice(r-1),this.text=t,this.token="id",this.token}return this.token=e,e}return null}getLine(){return this.line}getText(){return this.text}getToken(){return this.token}nextURL(){this._skip();let e=this.sentence[0],t=0,r="";for(;"\n"!=e;){if(null==e)return;r+=e,e=this.sentence[++t]}return t>0&&(this.sentence=this.sentence.slice(t)),this.token="string",this.text=r,r}nextKey(){this._skip();let e=this.sentence[0],t=0,r="";if("\n"==e)return this.sentence=this.sentence.slice(1),this.token=e,void this.line++;for(;e=this.sentence[t++],":"!=e;){if("\n"==e||null==e)return;" "!=e&&(r+=e)}return t>0&&(this.sentence=this.sentence.slice(t)),this.token="string",this.text=r,r}nextValue(){this._skip();let e=this.sentence[0],t=0,r="";if("\n"==e)return this.sentence=this.sentence.slice(1),void(this.token=e);if("{"==e){let s=0;for(;;){if(e=this.sentence[t++],null==e)return;if("{"==e&&s++,"}"==e&&s--,"\n"!=e){if("\r"!=e&&(r+=e,0==s))break}else this.line++}this.token="json"}else if('"'==e){for(e=this.sentence[t++];'"'!=e;){if(null==e)return;"\r"==e||"\n"==e?"\n"==e&&this.line++:r+=e,e=this.sentence[t++]}this.token="string"}else{for(;"\n"!=e&&null!=e;)r+=e,e=this.sentence[++t];this.token="string"}return t>0&&(this.sentence=this.sentence.slice(t)),this.text=r,r}_skip(){let e,t=0;for(;e=this.sentence[t]," "==e||"\t"==e||"\r"==e;)t++;t>0&&(this.sentence=this.sentence.slice(t))}}class h{static log(...e){h.loggerLevel>1||console.log(...e)}static info(...e){h.loggerLevel>1||console.log(...e)}static warn(...e){h.loggerLevel>2||console.warn(...e)}static error(...e){h.loggerLevel>3||console.error(...e)}}h.loggerLevel=0;class c{constructor(){this.lex=void 0}_rootExpression(){let e=this._condConcatExpression();if(null==e)throw h.error("syntax error(top level expression):%d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(top level expression)");let t=this.lex.getToken();if("="==t){this.lex.next();let r=this._rootExpression();if(null==r)throw h.error("syntax error(top level expression):%d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(top level expression)");return{type:t,variable:void 0,value:void 0,left:e,right:r}}return e}_condConcatExpression(){let e=this._compareExpression();if(null==e)throw h.error("syntax error(cond concat expression):%d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(cond concat expression)");let t=this.lex.getToken();if("&"==t||"|"==t){this.lex.next();let r=this._condConcatExpression();if(null==r)throw h.error("syntax error(cond concat expression):%d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(cond concat expression)");return{type:t,variable:void 0,value:void 0,left:e,right:r}}return e}_compareExpression(){let e=this._addSubExpression();if(null==e)throw h.error("syntax error(compare expression):%d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(compare expression)");let t=this.lex.getToken();if(">="==t||"<="==t||"=="==t||"!="==t||">"==t||"<"==t){this.lex.next();let r=this._compareExpression();if(null==r)throw h.error("syntax error(compare expression):%d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(compare expression)");return{type:t,variable:void 0,value:void 0,left:e,right:r}}return e}_addSubExpression(){let e=this._mulDivExpression();if(null==e)throw h.error("syntax error(add/sub expression) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(add/sub expression)");let t=this.lex.getToken();if("+"==t||"-"==t){this.lex.next();let r=this._addSubExpression();if(null==r)throw h.error("syntax error(add/sub expression) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(add/sub expression)");return{type:t,variable:void 0,value:void 0,left:e,right:r}}return e}_mulDivExpression(){let e=this._factor();if(null==e)throw h.error("syntax error(mul/div expression) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(mul/div expression)");let t=this.lex.getToken();if("*"==t||"/"==t){this.lex.next();let r=this._mulDivExpression();if(null==r)throw h.error("syntax error(mul/div expression) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(mul/div expression)");return{type:t,variable:void 0,value:void 0,left:e,right:r}}return e}_factor(){let e=this.lex.getToken();if("-"==e){this.lex.next();let t=this._term();if(null==t)throw h.error("syntax error(illegal position of operation symbol) %s - %o",this.lex.getLine(),e),new Error("syntax error(illegal position of operation symbol)");return{type:"*",variable:void 0,value:void 0,right:t,left:{type:"number",value:-1,variable:void 0,left:void 0,right:void 0}}}if("("==e){this.lex.next();const t=this._rootExpression();if(e=this.lex.getToken(),null==t||")"!=e)throw h.error("syntax error(illegal position of operation symbol) %s - %o",this.lex.getLine(),e),new Error("syntax error(illegal position of operation symbol)");return this.lex.next(),t}if("!"==e){this.lex.next();let t=this._rootExpression();if(null==t)throw h.error("syntax error(illegal position of operation symbol) %s - %o",this.lex.getLine(),e),new Error("syntax error(illegal position of operation symbol)");return{type:"!",variable:void 0,value:void 0,right:t,left:void 0}}return this._term()}_term(){let e=this.lex.getToken();if("string"==e||"number"==e||"int"==e||"json"==e){const e=this._literal();if(null==e)throw h.error("syntax error(unknown literal value) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(unknown literal value)");return e}if("id"==e){return this._ident()}throw h.error("syntax error(not found variables or literals) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(not found variables or literals)")}_ident(){let e=this.lex.getText();var t={name:e,member:void 0},r={type:"var",variable:t,value:void 0,left:void 0,right:void 0};let s=this.lex.next();for(;"."==s;){if(s=this.lex.next(),"id"!=s)throw h.error("syntax error(unknown token) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(unknown token)");e=this.lex.getText();var i={name:e,member:void 0};t.member=i,t=i,s=this.lex.next()}return r}_literal(){let e=this.lex.getToken(),t=this.lex.getText();if(this.lex.next(),"number"==e){return{type:"number",value:parseFloat(t),variable:void 0,left:void 0,right:void 0}}if("int"==e){return{type:"number",value:parseInt(t),variable:void 0,left:void 0,right:void 0}}if("string"==e){return{type:"string",value:t,variable:void 0,left:void 0,right:void 0}}if("json"==e){return{type:"json",value:t,variable:void 0,left:void 0,right:void 0}}}_identStatement(e){const t=this.lex.getLine();let r=this._rootExpression();if(null==r)throw h.error("syntax error(illigale ident statement) %d - %s",this.lex.getLine(),this.lex.getToken()),new Error("syntax error(illigale ident statement)");const s={type:"expression",line:t,syntax:r};e.push(s)}_httpStatement(e){const t=this.lex.getLine(),r=this.lex.getToken(),s=this.lex.nextURL();if(null==s)throw h.error("syntax error(no URL) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(no URL)");let i=this.lex.next();if("\n"!=i)throw h.error("syntax error(illegal http expression) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(illegal http expression)");const n={type:"http",line:t,method:r,url:s,headers:[],parameters:[],body:void 0,bind:void 0};let a=this.lex.nextKey();for(i=this.lex.getToken();"\n"!=i&&null!=i;){if("string"!=i||null==a)throw h.error("syntax error(parameter value error) %d - %o",this.lex.getLine(),i),new Error("syntax error(parameter value error)");const e=a.toUpperCase();if("PARAMETER"!=e&&"BODY"!=e&&"BIND"!=e){const t=this.lex.nextValue();if(null==t)throw h.error("syntax error(header value error) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(header value error)");const r={key:e,value:t};n.headers.push(r)}else if("PARAMETER"==e){const e=this.lex.nextValue();if(i=this.lex.getToken(),"string"!=i||null==e)throw h.error("syntax error(request parameter is not string) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(request parameter is not string)");n.parameters.push(e)}else if("BODY"==e){const e=this.lex.nextValue();if(i=this.lex.getToken(),null==e)throw h.error("syntax error(body value error) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(body value error)");if("string"!=i&&"json"!=i)throw h.error("syntax error(body value error) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(body value error)");const t={type:i,value:e};n.body=t}else if("BIND"==e){i=this.lex.next();const e=this.lex.getText();if("id"!=i)throw h.error("syntax error(bind parameter is not variable) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(bind parameter is not variable)");n.bind=e}if(i=this.lex.next(),"\n"!=i)throw h.error("syntax error(no end of line) %d - %o",this.lex.getLine(),this.lex.getText()),new Error("syntax error(no end of line)");a=this.lex.nextKey(),i=this.lex.getToken()}e.push(n),this.lex.next()}_controlStatement(e){const t=this.lex.getLine();let r=this.lex.getToken();if("IF"!=r&&"WHILE"!=r)return;const s={type:"",line:t,cond:void 0,syntaxList:[]};if(this.lex.next(),"IF"==r){s.type="if";let t=this._rootExpression();s.cond=t,e.push(s)}else if("WHILE"==r){s.type="while";let t=this._rootExpression();s.cond=t,e.push(s)}if(r=this.lex.getToken(),"\n"!=r)throw h.error("syntax error(no end of line) %d - %o",this.lex.getLine(),r),new Error("syntax error(no end of line)");this.lex.next();let i=[];this._parse(i),s.syntaxList=i}_sleepStatement(e){const t=this.lex.getLine();let r=this.lex.getToken();if("sleep"!=r)return;const s={type:"sleep",line:t,cond:void 0,syntaxList:void 0};this.lex.next();let i=this._rootExpression();if(s.cond=i,r=this.lex.getToken(),"\n"!=r)throw h.error("syntax error(no end of line) %d - %o",this.lex.getLine(),r),new Error("syntax error(no end of line)");this.lex.next(),e.push(s)}_stdioutStatement(e){const t=this.lex.getLine();if("string"==this.lex.getToken()){const r={type:"output",line:t,value:this.lex.getText()};e.push(r)}this.lex.next()}_parse(e){for(;;){const t=this.lex.getToken();if(null==t)break;if("\n"!=t)switch(t){case"id":this._identStatement(e);break;case"GET":case"POST":case"PUT":case"PATCH":case"DELETE":this._httpStatement(e);break;case"IF":case"WHILE":this._controlStatement(e);break;case"END":return void this.lex.next();case"sleep":this._sleepStatement(e);break;default:this._stdioutStatement(e)}else this.lex.next()}}parse(e){this.lex=new l(e);var t=[];return this.lex.next(),this._parse(t),t}}const u=n.createInterface({input:process.stdin,output:process.stdout});async function v(e){return await u.question(e)}class p{constructor(e,t){this.variables={},this.stack=[],this.stop=!1,this.variables={},this.stack=[],this.cmdlineParam=e,this.mode=t}_getVariableValue(e){let t=e.name,r=this.variables[t];if(null==r)return;if("json"!=r.type)return r;let s={type:r.type,value:r.value},i=r.value;for(;null!=e.member;)i=i[(e=e.member).name];return"object"==typeof i?(s.type="json",s.value=i):(s.type=typeof i,s.value=i),s}_getValueFromVariablePath(e){let t=e.split("."),r=t[0];this._hasVariableInStr(r)&&(r=this._convertVariableInStr(r));let s=this.variables[r];if(null==s)return;if("json"!=s.type)return s;let i={type:s.type,value:s.value},n="",a=s.value;for(let e=1;e<t.length;e++)n=t[e],this._hasVariableInStr(n)&&(n=this._convertVariableInStr(n)),a=a[n];return"object"==typeof a?(i.type="json",i.value=a):(i.type=typeof a,i.value=a),i}_hasVariableInStr(e){for(var t=0;t<e.length;t++)if("$"==e[t]&&"{"==e[t+1])return!0;return!1}_convertVariableInStr(e){var t="",r=0;if(!this._hasVariableInStr(e))return e;for(;;){var s=e[r++];if(null==s)break;if("$"==s&&"{"==e[r]){r++;for(var i=1,n="";null!=(s=e[r++])&&("{"==s&&i++,"}"==s&&i--,0!=i);)n+=s;if(n.length>0){var a=void 0;if(isNaN(parseInt(n)))a=this._getValueFromVariablePath(n);else{const e=parseInt(n);null!=this.cmdlineParam&&this.cmdlineParam.length<e&&(a=this.cmdlineParam[e])}s=null!=a?"json"==a.type?JSON.stringify(a.value,null,2):a.value:""}}t+=s}return t}_strToJson(e){return JSON.parse(e)}_checkArithmeticObj(e,t){if(null==e)return!1;if("json"==e.type)return!1;if(!t&&"string"==e.type)return!1;if("var"==e.type){if(null==e.variable)return!1;let r=this._getVariableValue(e.variable);if(null==r)return!1;if("json"==r.type)return!1;if(!t&&"string"==r.type)return!1;if(null==r.value)return!1}return!0}_addExecute(){var e=this.stack.pop(),t=this.stack.pop();if(!this._checkArithmeticObj(e,!0)||!this._checkArithmeticObj(t,!0))throw h.error("semantic error. can't add undefined."),new Error("semantic error. can't add undefined.");var r=e.value,s=t.value;"var"==e.type&&e.variable&&(r=this._getVariableValue(e.variable)),"var"==t.type&&t.variable&&(s=this._getVariableValue(t.variable));var i=s.value+r.value;const n={type:typeof i,value:i};this.stack.push({type:n.type,value:n,variable:void 0})}_subExecute(){var e=this.stack.pop(),t=this.stack.pop();if(!this._checkArithmeticObj(e,!1)||!this._checkArithmeticObj(t,!1))throw h.error("semantic error. can't sub undefined."),new Error("semantic error. can't sub undefined.");var r=e.value,s=t.value;"var"==e.type&&e.variable&&(r=this._getVariableValue(e.variable)),"var"==t.type&&t.variable&&(s=this._getVariableValue(t.variable));var i=s.value-r.value;const n={type:typeof i,value:i};this.stack.push({type:n.type,value:n,variable:void 0})}_mulExecute(){var e=this.stack.pop(),t=this.stack.pop();if(!this._checkArithmeticObj(e,!1)||!this._checkArithmeticObj(t,!1))throw h.error("semantic error. can't mul undefined."),new Error("semantic error. can't mul undefined.");var r=e.value,s=t.value;"var"==e.type&&e.variable&&(r=this._getVariableValue(e.variable)),"var"==t.type&&t.variable&&(s=this._getVariableValue(t.variable));var i=s.value*r.value;const n={type:typeof i,value:i};this.stack.push({type:n.type,value:n,variable:void 0})}_divExecute(){var e=this.stack.pop(),t=this.stack.pop();if(!this._checkArithmeticObj(e,!1)||!this._checkArithmeticObj(t,!1))throw h.error("semantic error. can't div undefined."),new Error("semantic error. can't div undefined.");var r=e.value,s=t.value;if("var"==e.type&&e.variable&&(r=this._getVariableValue(e.variable)),"var"==t.type&&t.variable&&(s=this._getVariableValue(t.variable)),0==r.value)throw h.error("can't divide by 0"),new Error("can't divide by 0");var i=s.value/r.value;const n={type:typeof i,value:i};this.stack.push({type:n.type,value:n,variable:void 0})}_largerThenExecute(e){var t=this.stack.pop(),r=this.stack.pop();if(!this._checkArithmeticObj(t,!0)||!this._checkArithmeticObj(r,!0))throw h.error("semantic error. can't comparison undefined."),new Error("semantic error. can't comparison undefined.");var s=t.value,i=r.value;"var"==t.type&&t.variable&&(s=this._getVariableValue(t.variable)),"var"==r.type&&r.variable&&(i=this._getVariableValue(r.variable));const n={type:"number",value:(e?i.value>=s.value:i.value>s.value)?1:0};this.stack.push({type:n.type,value:n,variable:void 0})}_smallerThenExecute(e){var t=this.stack.pop(),r=this.stack.pop();if(!this._checkArithmeticObj(t,!0)||!this._checkArithmeticObj(r,!0))throw h.error("semantic error. can't comparison undefined."),new Error("semantic error. can't comparison undefined.");var s=t.value,i=r.value;"var"==t.type&&t.variable&&(s=this._getVariableValue(t.variable)),"var"==r.type&&r.variable&&(i=this._getVariableValue(r.variable));const n={type:"number",value:(e?i.value<=s.value:i.value<s.value)?1:0};this.stack.push({type:n.type,value:n,variable:void 0})}_equalExecute(e){var t=this.stack.pop(),r=this.stack.pop();if(!this._checkArithmeticObj(t,!0)||!this._checkArithmeticObj(r,!0))throw h.error("semantic error. can't comparison undefined."),new Error("semantic error. can't comparison undefined.");var s=t.value,i=r.value;"var"==t.type&&t.variable&&(s=this._getVariableValue(t.variable)),"var"==r.type&&r.variable&&(i=this._getVariableValue(r.variable));const n={type:"number",value:(e?i.value!=s.value:i.value==s.value)?1:0};this.stack.push({type:n.type,value:n,variable:void 0})}_andExecute(){var e=this.stack.pop(),t=this.stack.pop();if(!this._checkArithmeticObj(e,!1)||!this._checkArithmeticObj(t,!1))throw h.error("semantic error. can't AND comparison undefined."),new Error("semantic error. can't AND comparison undefined.");var r=e.value,s=t.value;if("number"!=r.type||"number"!=s.type)throw h.error("semantic error. can't AND comparison no number value"),new Error("semantic error. can't AND comparison no number value");let i=0!=r.value,n=0!=s.value;const a={type:"number",value:i&&n?1:0};this.stack.push({type:a.type,value:a,variable:void 0})}_orExecute(){var e=this.stack.pop(),t=this.stack.pop();if(!this._checkArithmeticObj(e,!1)||!this._checkArithmeticObj(t,!1))throw h.error("semantic error. can't OR comparison undefined."),new Error("semantic error. can't OR comparison undefined.");var r=e.value,s=t.value;if("number"!=r.type||"number"!=s.type)throw h.error("semantic error. can't OR comparison no number value"),new Error("semantic error. can't OR comparison no number value");let i=0!=r.value,n=0!=s.value;const a={type:"number",value:i||n?1:0};this.stack.push({type:a.type,value:a,variable:void 0})}_notExpression(){var e=this.stack.pop();if(!this._checkArithmeticObj(e,!1))throw h.error("semantic error. can't NOT comparison undefined."),new Error("semantic error. can't NOT comparison undefined.");var t=e.value;if("number"!=t.type)throw h.error("semantic error. can't NOT comparison undefined."),new Error("semantic error. can't NOT comparison undefined.");t.value=0!=t.value?0:1,this.stack.push(e)}_assignExecute(){var e=this.stack.pop(),t=this.stack.pop();if("var"!=t.type)throw h.error("can't assgin value to no variable"),new Error("can't assgin value to no variable");var r=e.value;"var"==e.type&&(r=this.variables[e.variable.name]);var s=t.variable,i=this.variables[s.name];if(null==i||null==s.member)this.variables[s.name]=r;else for(i=i.value;null!=s.member;){if(null==i[s.member.name]&&(i[s.member.name]={}),null==s.member.member){i[s.member.name]=r.value;break}"object"!=typeof i[s.member.name]&&(i[s.member.name]={}),i=i[s.member.name],s=s.member}this.stack.length>0&&this.stack.push(e)}_semantic(e){var t;switch(e.type){case"+":case"&":this._semantic(e.left),this._semantic(e.right),this._addExecute();break;case"-":this._semantic(e.left),this._semantic(e.right),this._subExecute();break;case"*":this._semantic(e.left),this._semantic(e.right),this._mulExecute();break;case"/":this._semantic(e.left),this._semantic(e.right),this._divExecute();break;case">":this._semantic(e.left),this._semantic(e.right),this._largerThenExecute(!1);break;case">=":this._semantic(e.left),this._semantic(e.right),this._largerThenExecute(!0);break;case"<":this._semantic(e.left),this._semantic(e.right),this._smallerThenExecute(!1);break;case"<=":this._semantic(e.left),this._semantic(e.right),this._smallerThenExecute(!0);break;case"==":this._semantic(e.left),this._semantic(e.right),this._equalExecute(!1);break;case"!=":this._semantic(e.left),this._semantic(e.right),this._equalExecute(!0);break;case"!":this._semantic(e.right),this._notExpression();break;case"|":this._semantic(e.left),this._semantic(e.right),this._orExecute();break;case"=":this._semantic(e.left),this._semantic(e.right),this._assignExecute();break;case"var":let s=null===(t=e.variable)||void 0===t?void 0:t.name;if(null==s)throw h.error("no variable name error"),new Error("no variable name error");s in this.variables||(this.variables[s]=void 0),this.stack.push({type:"var",value:void 0,variable:e.variable});break;case"string":let i=this._convertVariableInStr(e.value);this.stack.push({type:"string",value:{type:"string",value:i},variable:void 0});break;case"number":let n=e.value;this.stack.push({type:"number",value:{type:"number",value:n},variable:void 0});break;case"json":let a=this._convertVariableInStr(e.value);var r=this._strToJson(a);this.stack.push({type:"json",value:{type:"json",value:r},variable:void 0})}}_expression(e){const t=e.syntax;this._semantic(t)}_output(e){var t=e.value,r=this._convertVariableInStr(t);console.log(r)}_outputHttpResponse(e,t,r){this.mode.silent||(console.log("%s %s",e,t),console.log(JSON.stringify(r,null,2)))}async _webAPIRequest(e){const t=[];if(null!=e.headers)for(var r of e.headers){const e=this._convertVariableInStr(r.value);t.push({key:r.key,value:e})}var s=[];if(null!=e.parameters)for(var i of e.parameters){const e=this._convertVariableInStr(i);s.push(e)}var n=void 0;if(null!=e.body)if("string"==e.body.type){n=this._convertVariableInStr(e.body.value)}else{const t=this._convertVariableInStr(e.body.value),r=JSON.parse(t);n=JSON.stringify(r)}const a=this._convertVariableInStr(e.url),o=await async function(e,t,r,s,i){const n=new Headers;let a="";if(null!=s)for(var o of s)a.length>0&&(a+="&"),a+=o;let l=t;if(a.length>0&&(l=l+"?"+a),null!=r)for(let e of r)n.append(e.key,e.value);try{return await fetch(l,{method:e,headers:n,body:""==i?void 0:i})}catch(e){throw h.error("http request error(%s)",e.toString()),e}}(e.method,a,t,s,n),l={url:o.url,status:o.status,headers:{},bodyType:"string",body:void 0};o.headers.forEach(((e,t)=>{l.headers[t]=e}));if(o.headers.get("content-type").includes("application/json")){const e=await o.json();l.body=e,l.bodyType="json"}else{const e=await o.text();l.body=e,l.bodyType="string"}if(this._outputHttpResponse(e.method,a,l),null!=e.bind){const t=e.bind;this.variables[t]={type:"json",value:l}}}async _ifExecute(e){if(null==e.cond)return;this._semantic(e.cond);const t=this.stack.pop();"number"==t.type&&0!=t.value.value&&await this._run(e.syntaxList,!1)}async _whileExecute(e){if(null!=e.cond)for(;;){this._semantic(e.cond);const t=this.stack.pop();if("number"!=t.type||0==t.value.value)break;await this._run(e.syntaxList,!1)}}async _sleepExecute(e){if(null==e.cond)return;this._semantic(e.cond);const r=this.stack.pop();if("number"==r.type&&null!=r.value){let e=r.value.value;e>0&&await t.setTimeout(e)}}async _command(e){for(console.log("execute line %d",e);;){const e=await v('press command(enter: next step, "r": run script, "v": display variables, "s": stop script) :');if(e.startsWith("r")){this.mode.step=!1;break}if(e.startsWith("s")){this.stop=!0;break}if(!e.startsWith("v"))break;console.log("%o",this.variables)}}async _run(e,t){for(let r of e){if(t&&(this.stack.length=0),this.stop)break;switch(r.type){case"output":this._output(r);break;case"http":await this._webAPIRequest(r);break;case"if":await this._ifExecute(r);break;case"while":await this._whileExecute(r);break;case"sleep":await this._sleepExecute(r);break;default:this._expression(r)}this.mode.step&&await this._command(r.line),this.mode.verbose&&(console.log("=="),console.log("%o",this.variables),console.log("--"))}}async run(e){try{await this._run(e,!0)}catch(e){throw h.error("script stopped (%s)",e.toString()),e}}}const f="\nVERSION: v0.1\nUSAGE: hcs file parameters... [OPTIONS]\n\nOPTIONS:\n    -h              display help.\n    -s              no display http response\n    -S              step mode\n    -v              verbose mode\n";!function(){const t=o(process.argv.slice(2)),r=function(e){const t={silent:!1,step:!1,verbose:!1};return null!=e.s&&(t.silent=!0),null!=e.S&&(t.step=!0),null!=e.v&&(t.verbose=!0),t}(t);null!=t.h&&(console.log(f),process.exit(0));const s=t._;0===s.length&&(console.error("no input"),console.log(f),process.exit(1));const i=[],n=s[0];for(var a=1;a<s.length;a++)i.push(s[a]);(async function(t,r,s){if(!e.existsSync(t))return h.error(`file not found: ${t}`),-1;try{const i=e.readFileSync(t,"utf-8"),n=(new c).parse(i),a=new p(r,s);await a.run(n)}catch(e){return-1}return 0})(n,i,r).then((e=>{process.exit(e)})).catch((e=>{process.exit(1)}))}();
